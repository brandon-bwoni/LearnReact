{"ast":null,"code":"var _jsxFileName = \"C:\\\\LearnReact\\\\investment-calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Header from './components/Investments/Header';\nimport InvestmentForm from './components/Investments/InvestmentForm';\nimport InvestmentTable from './components/Investments/InvestmentsTable';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Setting the state for calculate data\n  const [userInput, setUserInput] = useState(null);\n  const calculateHandler = userInput => {\n    setUserInput(userInput);\n  };\n  const style = {\n    textAlign: 'center'\n  };\n  const yearlyData = [];\n  if (userInput) {\n    let currentSavings = +userInput['currentSavings'];\n    const yearlyContribution = +userInput['yearlyContribution'];\n    const expectedReturn = +userInput['expectedReturn'] / 100;\n    const duration = +userInput['duration'];\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InvestmentForm, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), !userInput && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Investment calculated yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }, this), userInput && /*#__PURE__*/_jsxDEV(InvestmentTable, {\n      data: yearlyData,\n      initialInvestment: userInput['currentSavings']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nCOotz9vTgzH/m310d2/03oFEtk=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","InvestmentForm","InvestmentTable","useState","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","calculateHandler","style","textAlign","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","data","initialInvestment","_c","$RefreshReg$"],"sources":["C:/LearnReact/investment-calculator/src/App.js"],"sourcesContent":["import Header from './components/Investments/Header';\nimport InvestmentForm from './components/Investments/InvestmentForm';\nimport InvestmentTable from './components/Investments/InvestmentsTable';\nimport { useState } from 'react';\n\nfunction App() {\n  // Setting the state for calculate data\n  const [userInput, setUserInput] = useState(null);\n\n  const calculateHandler = (userInput) => {\n    setUserInput(userInput);\n  };\n\n  const style = {\n    textAlign: 'center'\n  };\n\n  const yearlyData = [];\n\n  if (userInput) {\n    let currentSavings = +userInput['currentSavings'];\n    const yearlyContribution = +userInput['yearlyContribution'];\n    const expectedReturn = +userInput['expectedReturn'] / 100;\n    const duration = +userInput['duration'];\n\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n\n      <InvestmentForm onCalculate={calculateHandler} />\n      {!userInput && <p>No Investment calculated yet.</p>}\n      {userInput && <InvestmentTable data={yearlyData} initialInvestment={userInput['currentSavings']} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,iCAAiC;AACpD,OAAOC,cAAc,MAAM,yCAAyC;AACpE,OAAOC,eAAe,MAAM,2CAA2C;AACvE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMO,gBAAgB,GAAIF,SAAS,IAAK;IACtCC,YAAY,CAACD,SAAS,CAAC;EACzB,CAAC;EAED,MAAMG,KAAK,GAAG;IACZC,SAAS,EAAE;EACb,CAAC;EAED,MAAMC,UAAU,GAAG,EAAE;EAErB,IAAIL,SAAS,EAAE;IACb,IAAIM,cAAc,GAAG,CAACN,SAAS,CAAC,gBAAgB,CAAC;IACjD,MAAMO,kBAAkB,GAAG,CAACP,SAAS,CAAC,oBAAoB,CAAC;IAC3D,MAAMQ,cAAc,GAAG,CAACR,SAAS,CAAC,gBAAgB,CAAC,GAAG,GAAG;IACzD,MAAMS,QAAQ,GAAG,CAACT,SAAS,CAAC,UAAU,CAAC;IAEvC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACdC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;EACF;EAAC;EAED,oBACEV,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACL,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVtB,OAAA,CAACJ,cAAc;MAAC2B,WAAW,EAAElB;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChD,CAACnB,SAAS,iBAAIH,OAAA;MAAAkB,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAClDnB,SAAS,iBAAIH,OAAA,CAACH,eAAe;MAAC2B,IAAI,EAAEhB,UAAW;MAACiB,iBAAiB,EAAEtB,SAAS,CAAC,gBAAgB;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChG,CAAC;AAEV;AAACpB,EAAA,CAzCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAyCX;AAED,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}