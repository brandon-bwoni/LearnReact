{"ast":null,"code":"var _jsxFileName = \"C:\\\\LearnReact\\\\investment-calculator\\\\src\\\\components\\\\Investments\\\\InvestmentsTable.js\";\nimport classes from './InvestmentsTable.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InvestmentTable(props) {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: classes.result,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: props.data.map(yearData => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearData.year)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearData.savingsEndOfYear)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearData.yearlyInterest)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearData.savingsEndOfYear - props.initialInvestment - yearData.yearlyContribution * yearData.year)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(props.initialInvestment + yearData.yearlyContribution * yearData.year)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, yearData.year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = InvestmentTable;\nvar _c;\n$RefreshReg$(_c, \"InvestmentTable\");","map":{"version":3,"names":["classes","jsxDEV","_jsxDEV","InvestmentTable","props","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","className","result","children","fileName","_jsxFileName","lineNumber","columnNumber","data","map","yearData","format","year","savingsEndOfYear","yearlyInterest","initialInvestment","yearlyContribution","_c","$RefreshReg$"],"sources":["C:/LearnReact/investment-calculator/src/components/Investments/InvestmentsTable.js"],"sourcesContent":["import classes from './InvestmentsTable.module.css';\r\n\r\nexport default function InvestmentTable(props) {\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n\r\n  return (\r\n    <table className={classes.result}>\r\n      <thead>\r\n        <tr>\r\n          <th>Year</th>\r\n          <th>Total Savings</th>\r\n          <th>Interest (Year)</th>\r\n          <th>Total Interest</th>\r\n          <th>Invested Capital</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.data.map(yearData => {\r\n          return (<tr key={yearData.year}>\r\n            <td>{formatter.format(yearData.year)}</td>\r\n            <td>{formatter.format(yearData.savingsEndOfYear)}</td>\r\n            <td>{formatter.format(yearData.yearlyInterest)}</td>\r\n            <td>{formatter.format(yearData.savingsEndOfYear - props.initialInvestment - yearData.yearlyContribution * yearData.year)}</td>\r\n            <td>{formatter.format(props.initialInvestment + (yearData.yearlyContribution * yearData.year))}</td>\r\n          </tr>);\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}