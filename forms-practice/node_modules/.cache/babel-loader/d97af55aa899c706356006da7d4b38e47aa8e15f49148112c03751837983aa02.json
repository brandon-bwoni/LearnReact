{"ast":null,"code":"var _jsxFileName = \"C:\\\\LearnReact\\\\forms-practice\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const nameIsValid = value => value.trim() !== '';\n  const validateEmail = email => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  };\n  const {\n    input: firstName,\n    hasError: nameHasError,\n    isValid: enteredNameIsValid,\n    inputChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetFirstName\n  } = useInput(nameIsValid);\n  const {\n    input: lasName,\n    hasError: lastNameHasError,\n    isValid: enteredLastNameIsValid,\n    inputChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(nameIsValid);\n  const {\n    input: email,\n    hasError: emailHasError,\n    isValid: enteredEmailIsValid,\n    inputChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(validateEmail);\n  let formIsValid;\n  if (enteredNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  function onSubmitHandler(event) {\n    event.preventDefault();\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  }\n  const nameInputClasses = nameHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          onChange: nameChangeHandler,\n          onBlur: nameBlurHandler,\n          value: firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"First name can not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: lasName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Last name can not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"BS3bRcRWwMOh/E6NsPmcON4ax/k=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","BasicForm","props","_s","nameIsValid","value","trim","validateEmail","email","String","toLowerCase","match","input","firstName","hasError","nameHasError","isValid","enteredNameIsValid","inputChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetFirstName","lasName","lastNameHasError","enteredLastNameIsValid","lastNameChangeHandler","lastNameBlurHandler","resetLastName","emailHasError","enteredEmailIsValid","emailChangeHandler","emailBlurHandler","resetEmail","formIsValid","onSubmitHandler","event","preventDefault","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/LearnReact/forms-practice/src/components/BasicForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n\n  const nameIsValid = value => value.trim() !== '';\n  const validateEmail = (email) => {\n    return String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n  };\n\n  const {\n    input: firstName,\n    hasError: nameHasError,\n    isValid: enteredNameIsValid,\n    inputChangeHandler: nameChangeHandler, inputBlurHandler: nameBlurHandler,\n    reset: resetFirstName\n  } = useInput(nameIsValid);\n\n  const {\n    input: lasName,\n    hasError: lastNameHasError,\n    isValid: enteredLastNameIsValid,\n    inputChangeHandler: lastNameChangeHandler, inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(nameIsValid);\n\n  const {\n    input: email,\n    hasError: emailHasError,\n    isValid: enteredEmailIsValid,\n    inputChangeHandler: emailChangeHandler, inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(validateEmail);\n\n\n\n  let formIsValid;\n  if (enteredNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  function onSubmitHandler(event) {\n    event.preventDefault();\n\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  }\n\n  const nameInputClasses = nameHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emailInputClasses = emailHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className='control-group'>\n        <div className={nameInputClasses}>\n          <label htmlFor='firstName'>First Name</label>\n          <input\n            type='text'\n            id='firstName'\n            onChange={nameChangeHandler}\n            onBlur={nameBlurHandler}\n            value={firstName}\n          />\n          {nameHasError && <p>First name can not be empty</p>}\n        </div>\n        <div className={nameInputClasses}>\n          <label htmlFor='lastName'>Last Name</label>\n          <input\n            type='text'\n            id='lastName'\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={lasName}\n          />\n        </div>\n        {lastNameHasError && <p>Last name can not be empty</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={email}\n        />\n        {emailHasError && <p>Please enter a valid email address</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}