{"ast":null,"code":"var _jsxFileName = \"C:\\\\LearnReact\\\\forms-practice\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/user-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.tim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: eamilInputHasError,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    if (!enteredNameIsValid) {\n      return;\n    }\n    resetNameInput();\n    resetEmailInput();\n  };\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control ';\n  const emailInputClasses = eamilInputHasError ? 'form-control invalid' : 'form-control ';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"D3pdvEyuP8tKfobOpZEsuYLP4zQ=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","tim","enteredEmail","enteredEmailIsValid","eamilInputHasError","emailBlurHandler","resetEmailInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","emailChangeHandler","emailInputHasError","disabled","_c","$RefreshReg$"],"sources":["C:/LearnReact/forms-practice/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/user-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError, valueChangeHandler: nameChangeHandler, inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput } = useInput(value =>\n      value.tim() !== '');\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: eamilInputHasError,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput } = useInput(value => value.includes('@'));\n\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    resetNameInput();\n    resetEmailInput();\n  };\n\n\n  const nameInputClasses = nameInputHasError\n    ? 'form-control invalid'\n    : 'form-control ';\n\n  const emailInputClasses = eamilInputHasError\n    ? 'form-control invalid'\n    : 'form-control ';\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor='email'>Your Name</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredName}\n        />\n        {emailInputHasError && <p className=\"error-text\">Please enter a valid email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}