{"ast":null,"code":"var _jsxFileName = \"C:\\\\LearnReact\\\\forms-practice\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInput = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('Name input is valid');\n    }\n  }, [enteredNameIsValid]);\n  const nameInputChangeHandler = event => {\n    const {\n      value\n    } = event.target;\n    setEnteredName(value);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    if (enteredName === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n\n    // const enteredValue = nameInput.current.value;\n    // console.log(enteredValue);\n    console.log(enteredName);\n    setEnteredName('');\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = enteredNameIsValid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInput,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"EzhaloSxiWbAIO7t6vs9Z6jooRg=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","SimpleInput","props","_s","nameInput","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","event","value","target","formSubmissionHandler","preventDefault","nameInputIsInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/LearnReact/forms-practice/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInput = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('Name input is valid');\n\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    const { value } = event.target;\n    setEnteredName(value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (enteredName === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n\n\n    // const enteredValue = nameInput.current.value;\n    // console.log(enteredValue);\n    console.log(enteredName);\n    setEnteredName('');\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = enteredNameIsValid\n    ? 'form-control'\n    : 'form-control invalid';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          ref={nameInput}\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAMC,SAAS,GAAGP,MAAM,CAAC,CAAC;EAC1B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACa,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEnEE,SAAS,CAAC,MAAM;IACd,IAAIS,kBAAkB,EAAE;MACtBI,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAEpC;EACF,CAAC,EAAE,CAACL,kBAAkB,CAAC,CAAC;EAExB,MAAMM,sBAAsB,GAAIC,KAAK,IAAK;IACxC,MAAM;MAAEC;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9BV,cAAc,CAACS,KAAK,CAAC;EACvB,CAAC;EAED,MAAME,qBAAqB,GAAGH,KAAK,IAAI;IACrCA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtB,IAAIb,WAAW,KAAK,EAAE,EAAE;MACtBG,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;IAEAA,qBAAqB,CAAC,IAAI,CAAC;;IAG3B;IACA;IACAG,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;IACxBC,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMa,kBAAkB,GAAG,CAACZ,kBAAkB,IAAIE,kBAAkB;EAEpE,MAAMW,gBAAgB,GAAGb,kBAAkB,GACvC,cAAc,GACd,sBAAsB;EAE1B,oBACEP,OAAA;IAAMqB,QAAQ,EAAEJ,qBAAsB;IAAAK,QAAA,gBACpCtB,OAAA;MAAKuB,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC/BtB,OAAA;QAAOwB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvC5B,OAAA;QACE6B,GAAG,EAAEzB,SAAU;QACf0B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,QAAQ,EAAEnB,sBAAuB;QACjCE,KAAK,EAAEV;MAAY;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN5B,OAAA;MAAKuB,SAAS,EAAC,cAAc;MAAAD,QAAA,gBAC3BtB,OAAA;QAAAsB,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtBT,kBAAkB,iBAAInB,OAAA;QAAGuB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACzB,EAAA,CA3DIF,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AA6DjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}